on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+*"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  create-packages:
    strategy:
      matrix:
        os: [ "ubuntu-latest" , "windows-2022", "macos-13", "macos-15" ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JBR
        uses: actions/setup-java@v4
        with:
          distribution: "jetbrains"
          java-package: "jdk"
          java-version: "21"
          check-latest: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache Gradle Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ matrix.os }}-gradle
          enableCrossOsArchive: true

      # Steps specific to macOS (to create DMG for macOS)
      - name: Install create-dmg (for macOS)
        if: startsWith(matrix.os, 'macos-')
        run: |
          brew install create-dmg

      - name: Gradle
        run: |
          ./gradlew
        shell: "bash"

      - name: Build package for current OS using gradle
        shell: bash
        run: |
          ./gradlew desktop:app:createReleaseFolderForCi

      - name: Release Gradle to unlock cache files
        shell: bash
        run: |
          ./gradlew -stop

      - name: Upload output to artifacts
        uses: actions/upload-artifact@v4
        with:
          path: ./build/ci-release
          name: app-${{ matrix.os }}

  build-linux-rpms:
    runs-on: ${{ matrix.runner }}
    needs: [ "create-packages" ]
    strategy:
      matrix:
        include:
          - runner: ubuntu-24.04
            arch_arg: x64
            rpm_arch: x86_64
            out_name: ABDownloadManager_${{ env.VERSION }}_linux_x64.rpm
          - runner: ubuntu-24.04-arm
            arch_arg: arm64
            rpm_arch: aarch64
            out_name: ABDownloadManager_${{ env.VERSION }}_linux_arm64.rpm
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Extract version
        id: v
        run: echo "VERSION=${GITHUB_REF_NAME#v}" >> "$GITHUB_ENV"

      - name: Ensure tools
        run: |
          sudo apt-get update -y
          sudo apt-get install -y openjdk-21-jdk openjdk-21-jre-headless unzip zip rpm rpm2cpio rpmdevtools git which desktop-file-utils

      - name: Make script executable
        run: chmod +x ./package-rhel.sh

      - name: Build RPM for ${{ matrix.arch_arg }}
        env:
          VERSION: ${{ env.VERSION }}
        run: |
          ./package-rhel.sh "${VERSION}" --arch ${{ matrix.arch_arg }}
          mkdir -p out
          SRC_RPM="$(ls -1 dist/ab-download-manager-${VERSION}-1.${{ matrix.rpm_arch }}.rpm)"
          cp -f "${SRC_RPM}" "out/${{ matrix.out_name }}"

      - name: Upload RPM artifact
        uses: actions/upload-artifact@v4
        with:
          name: rpm-${{ matrix.arch_arg }}
          path: out/*.rpm

  release:
    runs-on: "ubuntu-latest"
    needs: [ "create-packages", "build-linux-rpms" ]
    steps:
      - uses: "actions/download-artifact@v4"
        name: "Download All App Artifacts"
        with:
          path: release
          pattern: app-*
          merge-multiple: true

      - uses: "actions/download-artifact@v4"
        name: "Download RPM Artifacts"
        with:
          path: release/rpms
          pattern: rpm-*
          merge-multiple: true

      - name: Version Info
        id: version
        uses: nowsprinting/check-version-format-action@v3
        with:
          prefix: "v"

      - name: "Show the output tree of release"
        run: |
          tree .

      - uses: softprops/action-gh-release@v2
        with:
          prerelease: ${{ !steps.version.outputs.is_stable }}
          make_latest: legacy
          draft: true
          files: |
            release/binaries/*
            release/rpms/*.rpm
          body_path: release/release-notes.md

      - name: "Remove artifacts to free space"
        uses: geekyeggo/delete-artifact@v5
        with:
          name: |
            app-*
            rpm-*
