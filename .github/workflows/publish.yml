name: Publish

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+*"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  create-packages:
    strategy:
      matrix:
        os: [ "ubuntu-latest", "windows-latest","macos-latest", "macos-13"]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setting up Jetbrains Runtime
        shell: bash
        run: |
          set -Eeuo pipefail
          jdksPath="$HOME/.jdks"
          os=$(echo "${{ runner.os }}-${{ runner.arch }}" | tr "[:upper:]" "[:lower:]")
          echo "RUNNER_OS=$os" >> "$GITHUB_ENV"
          
          version="17.0.10"
          build="b1207.14"
          base_file_name="jbrsdk_jcef"
          file_extension=".tar.gz"
          
          download_links=(
            "linux-arm64 ${base_file_name}-${version}-linux-aarch64-${build}${file_extension}"
            "linux-x64 ${base_file_name}-${version}-linux-x64-${build}${file_extension}"
            "macos-arm64 ${base_file_name}-${version}-osx-aarch64-${build}${file_extension}"
            "macos-x64 ${base_file_name}-${version}-osx-x64-${build}${file_extension}"
            "windows-arm64 ${base_file_name}-${version}-windows-aarch64-${build}${file_extension}"
            "windows-x64 ${base_file_name}-${version}-windows-x64-${build}${file_extension}"
          )
          
          found_link=false
          jdkFileNameWithExt=""
          jdkFileName=""
          
          for link_info in "${download_links[@]}"; do
            current_os=$(echo "$link_info" | awk '{print $1}')
            current_link=$(echo "$link_info" | awk '{print $2}')
            if [ "$current_os" = "$os" ]; then
              found_link=true
              jdkFileNameWithExt="$current_link"
              jdkFileName="${jdkFileNameWithExt%$file_extension}"
              break
            fi
          done
          
          echo $jdkFileNameWithExt
          echo $jdkFileName
          
          if [ "$found_link" = true ]; then
            link="https://cache-redirector.jetbrains.com/intellij-jbr/$jdkFileNameWithExt"
            curl --location "$link" --create-dirs --output "$jdksPath/$jdkFileNameWithExt"
            tar -xf "$jdksPath/$jdkFileNameWithExt" -C "$jdksPath"
            echo "JAVA_HOME=$jdksPath/$jdkFileName" >> "$GITHUB_ENV"
            if [[ "$os" == *"macos"* ]]; then
            echo "JAVA_HOME=$jdksPath/$jdkFileName/Contents/Home" >> "$GITHUB_ENV"
            fi
            echo "PATH=$jdksPath/$jdkFileName/bin:$PATH" >> "$GITHUB_ENV"
          else
            echo "Can not find $os download link, exit"
            exit 1
          fi
      - name: Cache Gradle Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ env.RUNNER_OS }}-gradle
          enableCrossOsArchive: true
      - name: make Gradlew executable
        if: matrix.os != 'windows-latest'
        run: |
          chmod 755 ./gradlew
        shell: "bash"
      - name: Gradle
        #          at the current version of compose plugin
        #          first attempt to init gradle always fails because of "BuildScopeServices has been closed"
        #          remove this after this bug is fixed
        continue-on-error: true
        run: |
          ./gradlew
        shell: "bash"

      - name: Build package for current OS using gradle
        shell: bash
        run: |
          ./gradlew desktop:app:createReleaseFolderForCi

      - name: Release Gradle to unlock cache files
        shell: bash
        run: |
          ./gradlew -stop

      - name: Upload output to artifacts
        uses: actions/upload-artifact@v4
        with:
          path: ./build/ci-release
          name: app-${{ env.RUNNER_OS }}

  release:
    runs-on: "ubuntu-latest"
    needs: [ "create-packages" ]
    steps:
      - uses: "actions/download-artifact@v4"
        name: "Download All Artifacts Into One Directory"
        with:
          path: release
          pattern: app-*
          merge-multiple: true

      - name: Version Info
        id: version
        uses: nowsprinting/check-version-format-action@v3
        with:
          prefix: "v"

      - name: "Show the output tree of release"
        run: |
          tree .
      - uses: softprops/action-gh-release@v2
        with:
          prerelease: ${{!steps.version.outputs.is_stable }}
          make_latest: legacy
          draft: true
          files: |
            release/binaries/*
          body_path: release/release-notes.md
      - name: "Remove artifacts to free space"
        uses: geekyeggo/delete-artifact@v5
        with:
          name: app-*